AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  speakyer

  Turn anything into a podcast

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Runtime: python3.10
    Architectures:
    - x86_64

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
    # S3 Bucket to store raw incoming data
  RawDataS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-raw-data'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ProcessedDataS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-processed-data'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  ProcessedDataS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ProcessedDataS3Bucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub '${ProcessedDataS3Bucket.Arn}/*'

  PydubLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: pydub
      ContentUri: pydub_layer/
      CompatibleRuntimes:
        - python3.10

  # SNS Topic for incoming emails
  EmailSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: email-sns-topic

  # Lambda function to filter emails based on sender whitelist
  EmailFilterLambda:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/
      Handler: email_filter.lambda_handler
      Environment:
        Variables:
          WHITELIST: "jamie@jamieforrest.com"
          S3_BUCKET: !Ref RawDataS3Bucket
          NEXT_LAMBDA: !GetAtt RawDataToAudioLambda.Arn
      Policies:
        - Statement:
            Effect: Allow
            Action: s3:PutObject
            Resource: !Sub "arn:aws:s3:::${RawDataS3Bucket}/*"
        - Statement:
            Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !GetAtt RawDataToAudioLambda.Arn

      Events:
        SNSSubscription:
          Type: SNS
          Properties:
            Topic: !Ref EmailSNSTopic

  # Lambda function to process data asynchronously
  RawDataToAudioLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: raw_data_to_audio.lambda_handler
      Timeout: 300
      MemorySize: 1024
      Environment:
        Variables:
          OPENAI_API_KEY: "{{resolve:secretsmanager:prod/speakyer/secrets:SecretString:OPENAI_API_KEY::}}"
          OUTPUT_S3_BUCKET: !Ref ProcessedDataS3Bucket
      Layers:
        - !Ref PydubLayer
      Policies:
        - Statement:
            Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${RawDataS3Bucket}/*"
        - Statement:
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${ProcessedDataS3Bucket}/*"
        - Statement:
            Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !Sub "arn:aws:s3:::${ProcessedDataS3Bucket}"

  # SES Rule Set
  SESReceiptRuleSet:
    Type: AWS::SES::ReceiptRuleSet
    Properties:
      RuleSetName: EmailRuleSet

  # SES Receipt Rule to publish email to SNS
  SESReceiptRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref SESReceiptRuleSet
      Rule:
        Name: EmailToSNSRule
        Enabled: true
        Recipients:
          - speakyer.com
        Actions:
          - SNSAction:
              TopicArn: !Ref EmailSNSTopic
        ScanEnabled: true
        TlsPolicy: Optional

  #
